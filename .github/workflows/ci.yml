name: CI

on:
  push:
    branches: 
      - main

jobs:
  build-wasm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Setup Deno
        uses: denolib/setup-deno@v2 
        with:
         deno-version: v1.13.2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Build
        run: |
          mkdir -p /home/runner/go/src/github.com/natemoo-re/goldmark
          cp -R . /home/runner/go/src/github.com/natemoo-re/goldmark
          make build

      - name: "check patch"
        if: contains(github.event.head_commit.message, 'release patch')
        run: deno run --allow-net https://deno.land/x/cicd/create-patch-release.ts ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }}
      
      - name: "check patch"
        if: contains(github.event.head_commit.message, 'release patch')
        run: cd node && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: "check minor"
        if: contains(github.event.head_commit.message, 'release minor')
        run: |
          deno run --allow-net https://deno.land/x/cicd/create-minor-release.ts ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }}
          cd node && npm version minor && npm publish

      - name: "check minor"
        if: contains(github.event.head_commit.message, 'release minor')
        run: cd node && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: "check major"
        if: contains(github.event.head_commit.message, 'release major')
        run: deno run --allow-net https://deno.land/x/cicd/create-major-release.ts ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }}
      
      - name: "check major"
        if: contains(github.event.head_commit.message, 'release major')
        run: cd node && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
